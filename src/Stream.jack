class Stream{
    field int pos, index;

    constructor Stream new(int startIndex){
        let pos = 0;
        let index = startIndex;

        return this;
    }

    method int GetBit(){
        var int b, s, temp, bitwise;

        let b = Bytes.GetByte(index + (pos/8));
        let s = 7 - (pos & 7);
        if ((b = 0) & (Bytes.GetByte(index + (pos/8) + 1) = 0) & (Bytes.GetByte(index + (pos/8) - 1) = 255) & (Bytes.GetByte(index + (pos/8) - 2) = 255)) {
            let pos = pos + 16;
            let b = Bytes.GetByte(index + (pos/8));
        }
        let pos = pos + 1;
        let bitwise = Extensions.Pow(2, s);
        return (b / bitwise) & 1;
    }
    
    method int GetBinN(int l){
        var int val;
        let val = 0;
        while (l > 0){
            let val = val * 2 + GetBit();
            let l = l - 1;
        }
        return val;
    }

}