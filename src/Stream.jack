/**
 * Класс, который представляет данные в виде потока битов
 * Согласно спецификации jpeg, последовательности байтов FF00 должны считываться без нулей
*/

class Stream{
    field int pos, index;

    constructor Stream new(int startIndex){
        let pos = 0;
        let index = startIndex;

        return this;
    }

    method int GetBit(){
        var int b, s, temp, bitwise, p;
        let p = index + (pos/8);

        let b = Bytes.GetByte(p);
        let s = 7 - (pos & 7);
        if (b = 0) {                                    // Эта конструкция нужна для оптимизации, 
            if (Bytes.GetByte(p + 1) = 0) {             // т. к. jack сначала считает всё выражение
                if (Bytes.GetByte(p - 1) = 255) {       // в if, а не останавливается, когда один из
                    if (Bytes.GetByte(p - 2) = 255) {   // операндов false
                        let pos = pos + 16;
                        let b = Bytes.GetByte(index + (pos/8)); 
                    }
                }
            }
        }
        let pos = pos + 1;
        let bitwise = Extensions.Pow(2, s);
        return (b / bitwise) & 1;
    }
    
    method int GetBinN(int l){
        var int val;
        let val = 0;
        while (l > 0){
            let val = val * 2 + GetBit();
            let l = l - 1;
        }
        return val;
    }

}