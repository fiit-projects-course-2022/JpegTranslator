class Float{
    field int intPart, fracPart;
    field int accuracy;

    method int GetIntPart() { return intPart; }
    method int GetFracPart() { return fracPart; }
    
    // если что-то не работает, то скорее всего здесь) узнай по поводу присваивания
    constructor Float new(int x, int y){
        var int deg;
        let intPart = x; 
        let deg = Extensions.GetIntLen(y);
        if (deg > 10){let deg = 10;}
        let fracPart = y * Extensions.Pow(10, (10 - deg));//ффффф
        let accuracy = 10000;
        do WPC();
        return this;
    } 

    method void WPC(){
        if(~(fracPart < accuracy)){
            let intPart = intPart + (fracPart / accuracy);
            let fracPart = fracPart - ((fracPart / accuracy) * accuracy);
        }
        if((fracPart < 0) & (intPart > 0)){
            let intPart = intPart - 1;
            let fracPart = accuracy + fracPart;
        }
        if ((intPart < 0) & (fracPart > 0)){
            let fracPart = (-accuracy) + fracPart;
            if(intPart < 0){
                let intPart = intPart - 1;
            }
        }
        return;
    }

    method Float intAdd(int n){
        let intPart = intPart + n;
        do WPC();
        return this;
    }

    method Float Add(Float f){
        let intPart = intPart + f.GetIntPart();
        let fracPart = fracPart + f.GetFracPart();
        do WPC();
        return this;
    }

    method Float intMult(int n){
        let intPart = intPart * n;
        let fracPart = fracPart * n;
        do WPC();
        return this; 
    }

    method Float Mult(Float f){
        var Float a;
        var int c, deg, d;
        let a = Float.new(0,0);
        let a = f.intMult(1);
        let a = a.intMult(intPart);

        let c = (f.GetIntPart() * accuracy + f.GetFracPart()) * fracPart;
        let deg = Extensions.GetIntLen(fracPart);
        let c = c / (Extensions.Pow(10, (10 - deg)));
       
        let d = (a.GetIntPart() * accuracy + a.GetFracPart());
        let intPart = 0;
        let fracPart = d + c;
        do WPC();
        return this;
    }

    method Float intDiv(int d){
        var int c;
        let c = ((intPart * accuracy) + fracPart) / d;
        let intPart = 0;
        let fracPart = c;
        do WPC();
        return this;
    }
}