class List {
    field int type, value, _itemsCount, Count;
    field Array _items;

    constructor List new() {
        let Count = 0;
        let _itemsCount = 0;
        let type = 0;
        let value = -1;
        return this;
    }

    method int Count() { return Count; }
    
    method int Type() { return type; }

    method List GetValue(int index) {
        if (index = -1) {
            return value;
        }

        if (~(index < Count)) {
            do Sys.error(4);
        }

        return _items[index]; 
    }

    method void Add(int item) {
        var int i;
        var Array tempArray;
        
        if (_itemsCount = 0) {
            let _items = Array.new(1);
            let _itemsCount = 1;
            let Count = 1;
            let _items[0] = item;
            return;
        }

        if (Count = _itemsCount) {
            let tempArray = Array.new(_itemsCount * 2);
            let i = 0;
            while(i < Count) {
                let tempArray[i] = _items[i];
                let i = i + 1;
            }
            do _items.dispose();
            let _items = tempArray;
            let _itemsCount = _itemsCount * 2;
        }

        let _items[Count] = item;
        let Count = Count + 1;
        return;
    }

    method int Pop() {
        var Array tempArray;
        var int i;

        if (Count = 0) {
            do Sys.error(4);
        }

        if (~(Count - 1 > (_itemsCount / 2))) {
            let tempArray = Array.new(_itemsCount / 2);
            let i = 0;
            while(i < Count) {
                let tempArray[i] = _items[i];
                let i = i + 1;
            }
            do _items.dispose();
            let _items = tempArray;
        }

        let Count = Count - 1;
        return _items[Count];
    }

    method void AddRange(Array range, int rangeLen) {
        var Array tempArray;
        var int size, i;

        if (Count + rangeLen > _itemsCount) {
            let size = _itemsCount;
            while(size < Count + rangeLen) {
                let size = size * 2;
            }
            let tempArray = Array.new(size);
            let i = 0;
            while(i < Count) {
                let tempArray[i] = _items[i];
                let i = i + 1;
            }
            do _items.dispose();
            let _items = tempArray;
        }
        
        let i = 0;
        while(i < rangeLen) {
            let _items[i + Count] = range[i];
            let i = i + 1;
        }
        let Count = Count + rangeLen;
        return;
    }

    method void dispose() {
        do _items.dispose();
        do Memory.deAlloc(this);
        return;
    }
}
