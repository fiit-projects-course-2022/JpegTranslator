function Extensions.Clamp 0
push argument 0
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 255
return
label IF_FALSE0
push argument 0
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 0
return
function Extensions.GetArray 3
push argument 1
push argument 0
lt
push argument 2
add
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 2
call Array.new 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push argument 2
lt
not
if-goto WHILE_END0
push local 1
push local 0
add
push argument 0
push local 1
add
call Bytes.GetByte 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Extensions.DecodeNumber 2
push argument 0
push argument 1
push constant 1
sub
call Extensions.Pow 2
pop local 0
push argument 1
push local 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 2
push local 0
call Math.multiply 2
push constant 1
sub
sub
return
label IF_FALSE0
push argument 1
return
function Extensions.XYtoLin 0
push argument 1
push constant 8
call Math.multiply 2
push argument 0
add
return
function Extensions.Pow 2
push constant 1
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 1
push argument 0
call Math.multiply 2
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function Extensions.GetIntLen 2
push constant 0
pop local 0
push argument 0
pop local 1
label WHILE_EXP0
push local 1
push constant 0
gt
not
if-goto WHILE_END0
push local 1
push constant 10
call Math.divide 2
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Extensions.Factorial 2
push constant 1
pop local 0
push argument 0
pop local 1
label WHILE_EXP0
push local 1
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push local 1
call Math.multiply 2
pop local 0
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Extensions.Cos 6
push constant 0
push constant 0
call Float.new 2
pop local 0
push constant 1
neg
pop local 4
push constant 0
pop local 5
push constant 1
push constant 0
call Float.new 2
pop local 1
push argument 0
push argument 0
call Float.Mult 2
pop local 3
push constant 1
push constant 0
call Float.new 2
pop local 2
label WHILE_EXP0
push local 5
push constant 10
lt
not
if-goto WHILE_END0
push local 1
push constant 1
call Float.intMult 2
pop local 2
push local 2
push local 5
call Extensions.Factorial 1
call Float.intDiv 2
pop local 2
push local 2
call Float.print 1
pop temp 0
push local 0
push local 2
call Float.Add 2
pop local 0
push local 1
push local 3
call Float.Mult 2
pop local 1
push local 1
push local 4
call Float.intMult 2
pop local 1
push local 5
push constant 2
add
pop local 5
push local 1
call Float.print 1
pop temp 0
push local 0
call Float.print 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
